version: '3'
services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=spark_hub
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - db-data-capstone:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: docker.io/redis
    restart: always
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel verbose
    networks:
      - backend

  server:
    image: ${IMAGE}/server:${COMMIT_SLUG}
    depends_on:
      - redis
      - db
    environment:
      - DB_CONNECTION_STRING=postgres://postgres:password@db:5432/spark_hub
      - REDIS_CONN_STRING=redis://redis:6379
      - UPLOAD_PATH=/server/public/uploads
    labels:
      - "traefik.http.routers.capstoneapistaging.rule=Host(`api.capstone.staging.apps.techpulse.us`)"
      - "traefik.docker.network=traefik-network"
    networks:
      backend:
        priority: 100
      frontend:
        priority: 1000

  frontend:
    image: ${IMAGE}/frontend:${COMMIT_SLUG}
    depends_on:
      - server
    environment:
      - REACT_APP_SERVER_ADDRESS=http://api.capstone.staging.apps.techpulse.us
    labels:
      - "traefik.http.routers.capstonestaging.rule=Host(`capstone.staging.apps.techpulse.us`)"
    networks:
      - frontend

    
volumes:
  db-data-capstone:
  redis-data:

networks:
    frontend:
        name: traefik-network
        external: true
    backend:
