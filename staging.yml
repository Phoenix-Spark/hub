version: '3'
services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=spark_hub
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - db-data-capstone:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  redis:
    image: docker.io/redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel verbose
    networks:
      - backend

  frontend:
    image: ${IMAGE}/frontend:${COMMIT_SLUG}
    environment:
      - SERVER_STRING=http://capstoneapi.dev.apps.techpulse.us
    ports:
      - '80'
    labels:
      - "traefik.http.routers.capstonedev.rule=Host(`capstone.dev.apps.techpulse.us`)"

  server:
    image: ${IMAGE}/server:${COMMIT_SLUG}
    depends_on:
      - redis
      - db
    environment:
      - DB_CONNECTION_STRING=postgres://postgres:password@db:5432/spark_hub
      - REDIS_CONN_STRING=redis://redis:6379
    ports:
      - '80'
    labels:
      - "traefik.http.routers.capstoneapidev.rule=Host(`capstoneapi.dev.apps.techpulse.us`)"
    
volumes:
  db-data-capstone:
  redis-data:

networks:
    default:
        name: traefik-network
        external: true
    backend:
